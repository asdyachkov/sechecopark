from datetime import date

from aiogram.dispatcher import FSMContext

from data.config import ADMINS
from states import Test
from aiogram import types
from aiogram.dispatcher.filters import Command
from aiogram.types import CallbackQuery
from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton

from keyboards.inline import keyb0
from keyboards.inline.callback_datas import month_callback, day_callback
from loader import dp, bot

month_list = ['–Ø–Ω–≤–∞—Ä—å',
              '–§–µ–≤—Ä–∞–ª—å',
              '–ú–∞—Ä—Ç',
              '–ê–ø—Ä–µ–ª—å',
              '–ú–∞–π',
              '–ò—é–Ω—å',
              '–ò—é–ª—å',
              '–ê–≤–≥—É—Å—Ç',
              '–°–µ–Ω—Ç—è–±—Ä—å',
              '–û–∫—Ç—è–±—Ä—å',
              '–ù–æ—è–±—Ä—å',
              '–î–µ–∫–∞–±—Ä—å'
              ]
month_day = {'–Ø–Ω–≤–∞—Ä—å': 31,
             '–§–µ–≤—Ä–∞–ª—å': 28,
             '–ú–∞—Ä—Ç': 31,
             '–ê–ø—Ä–µ–ª—å': 30,
             '–ú–∞–π': 31,
             '–ò—é–Ω—å': 30,
             '–ò—é–ª—å': 31,
             '–ê–≤–≥—É—Å—Ç': 31,
             '–°–µ–Ω—Ç—è–±—Ä—å': 30,
             '–û–∫—Ç—è–±—Ä—å': 31,
             '–ù–æ—è–±—Ä—å': 30,
             '–î–µ–∫–∞–±—Ä—å': 31
             }


@dp.message_handler(Command('start'))
async def start_message(message: types.Message):
    await message.answer('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! üôÇ\n'
                         '–î–∞–Ω–Ω–∞—è –ø—Ä–æ–≥—Ä–∞–º–º–∞ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∞ –¥–ª—è –∞—Ä–µ–Ω–¥—ã –Ω–∞—à–µ–≥–æ –¥–æ–º–∏–∫–∞ –≤ –¥–µ—Ä–µ–≤–Ω–µ. üè°\n'
                         '–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ, —á—Ç–æ–±—ã –∑–∞–ø–∏—Å–∞—Ç—å—Å—è.',
                         reply_markup=keyb0)


@dp.message_handler(Command('cancel'), state=Test.Q6)
async def zapis_otmena(message: types.Message, state: FSMContext):
    await message.answer("–ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞ üìõ")
    await message.answer("–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /start",
                         reply_markup=types.ReplyKeyboardRemove())
    await state.finish()


@dp.callback_query_handler(text_contains="arend_True")
async def start_zapis(call: CallbackQuery):
    await call.message.edit_reply_markup(reply_markup=None)
    await call.answer(cache_time=1)
    now = int(str(date.today())[5:7])-1
    keyb1 = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=f"{month_list[now] if now<= 12 else month_list[now-12]}",
                                     callback_data=month_callback.new(
                                         month=f"{month_list[now] if now<= 12 else month_list[now-12]}")),
                InlineKeyboardButton(text=f"{month_list[now+1] if now+1<= 12 else month_list[now-11]}",
                                     callback_data=month_callback.new(
                                         month=f"{month_list[now+1] if now+1<= 12 else month_list[now-11]}"))
            ],
            [
                InlineKeyboardButton(text=f"{month_list[now+2] if now+2<= 12 else month_list[now-10]}",
                                     callback_data=month_callback.new(
                                         month=f"{month_list[now+2] if now+2<= 12 else month_list[now-10]}")),
                InlineKeyboardButton(text=f"{month_list[now+3] if now+3<= 12 else month_list[now-9]}",
                                     callback_data=month_callback.new(
                                         month=f"{month_list[now+3] if now+3<= 12 else month_list[now-9]}"))
            ],
            [
                InlineKeyboardButton(text="–ù–∞–∑–∞–¥ ‚Ü©", callback_data="cancel")
            ]
        ]
    )
    await call.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü –∏ —á–∏—Å–ª–æ, –∫–æ–≥–¥–∞ –í—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –∫ –Ω–∞–º –ø—Ä–∏–µ—Ö–∞—Ç—å üìÖ",
                              reply_markup=keyb1)
    await Test.Q2.set()


@dp.callback_query_handler(state=Test.Q2, text_contains="cancel")
async def tell_about(call: CallbackQuery, state: FSMContext):
    await call.answer("–ó–∞–ø–∏—Å—å –æ—Ç–º–µ–Ω–µ–Ω–∞ üìõ", show_alert=True)
    await call.message.answer("–î–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏ –Ω–∞–ø–∏—à–∏—Ç–µ /start")
    await call.message.edit_reply_markup(reply_markup=None)
    await state.finish()


@dp.callback_query_handler(state=Test.Q2)
async def month_zapis(call: CallbackQuery, state: FSMContext):
    await call.message.edit_reply_markup(reply_markup=None)
    await call.answer(cache_time=1)
    month = str(call.data)[6::]
    now_day = int(str(date.today())[-2::])
    number_today = int(str(date.today())[5:7])-1
    await state.update_data(answer_month=month)
    keyb2 = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=f"{'1' if now_day < 1 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="1")),
                InlineKeyboardButton(text=f"{'2' if now_day < 2 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="2")),
                InlineKeyboardButton(text=f"{'3' if now_day < 3 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="3")),
                InlineKeyboardButton(text=f"{'4' if now_day < 4 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="4")),
                InlineKeyboardButton(text=f"{'5' if now_day < 5 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="5")),
                InlineKeyboardButton(text=f"{'6' if now_day < 6 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="6")),
                InlineKeyboardButton(text=f"{'7' if now_day < 7 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="7")),
            ],
            [
                InlineKeyboardButton(text=f"{'8' if now_day < 8 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="8")),
                InlineKeyboardButton(text=f"{'9' if now_day < 9 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="9")),
                InlineKeyboardButton(text=f"{'10' if now_day < 10 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="10")),
                InlineKeyboardButton(text=f"{'11' if now_day < 11 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="11")),
                InlineKeyboardButton(text=f"{'12' if now_day < 12 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="12")),
                InlineKeyboardButton(text=f"{'13' if now_day < 13 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="13")),
                InlineKeyboardButton(text=f"{'14' if now_day < 14 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="14")),
            ],
            [
                InlineKeyboardButton(text=f"{'15' if now_day < 15 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="15")),
                InlineKeyboardButton(text=f"{'16' if now_day < 16 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="16")),
                InlineKeyboardButton(text=f"{'17' if now_day < 17 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="17")),
                InlineKeyboardButton(text=f"{'18' if now_day < 18 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="18")),
                InlineKeyboardButton(text=f"{'19' if now_day < 19 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="19")),
                InlineKeyboardButton(text=f"{'20' if now_day < 20 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="20")),
                InlineKeyboardButton(text=f"{'21' if now_day < 21 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="21")),
            ],
            [
                InlineKeyboardButton(text=f"{'22' if now_day < 22 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="22")),
                InlineKeyboardButton(text=f"{'23' if now_day < 23 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="23")),
                InlineKeyboardButton(text=f"{'24' if now_day < 24 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="24")),
                InlineKeyboardButton(text=f"{'25' if now_day < 25 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="25")),
                InlineKeyboardButton(text=f"{'26' if now_day < 26 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="26")),
                InlineKeyboardButton(text=f"{'27' if now_day < 27 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="27")),
                InlineKeyboardButton(text=f"{'28' if now_day < 28 or month != month_list[number_today] else ''}",
                                     callback_data=day_callback.new(date="28")),
            ],
            [
                InlineKeyboardButton(text=f"{'29' if month_day[month] > 28 and (now_day < 29 or month != month_list[number_today]) else ''}",
                                     callback_data=day_callback.new(date=f"{'29' if month_day[month] >= 29 else ''}")),
                InlineKeyboardButton(text=f"{'30' if month_day[month] > 29 and (now_day < 30 or month != month_list[number_today]) else ''}",
                                     callback_data=day_callback.new(date=f"{'30' if month_day[month] >= 30 else ''}")),
                InlineKeyboardButton(text=f"{'31' if month_day[month] > 30 and (now_day < 31 or month != month_list[number_today]) else ''}",
                                     callback_data=day_callback.new(date=f"{'31' if month_day[month] >= 31 else ''}"))
            ],
            [
                InlineKeyboardButton(text="–ù–∞–∑–∞–¥ ‚Ü©", callback_data="cancel")
            ]
        ]
    )
    await call.message.answer("–ê —Ç–µ–ø–µ—Ä—å –¥–µ–Ω—å üóì", reply_markup=keyb2)
    await Test.Q3.set()


@dp.callback_query_handler(state=Test.Q3, text_contains="cancel")
async def another_month(call: CallbackQuery):
    await call.message.edit_reply_markup(reply_markup=None)
    await call.answer(cache_time=1)
    now = int(str(date.today())[5:7]) - 1
    keyb1 = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=f"{month_list[now] if now <= 12 else month_list[now - 12]}",
                                     callback_data=month_callback.new(
                                         month=f"{month_list[now] if now <= 12 else month_list[now - 12]}")),
                InlineKeyboardButton(text=f"{month_list[now + 1] if now + 1 <= 12 else month_list[now - 11]}",
                                     callback_data=month_callback.new(
                                         month=f"{month_list[now + 1] if now + 1 <= 12 else month_list[now - 11]}"))
            ],
            [
                InlineKeyboardButton(text=f"{month_list[now + 2] if now + 2 <= 12 else month_list[now - 10]}",
                                     callback_data=month_callback.new(
                                         month=f"{month_list[now + 2] if now + 2 <= 12 else month_list[now - 10]}")),
                InlineKeyboardButton(text=f"{month_list[now + 3] if now + 3 <= 12 else month_list[now - 9]}",
                                     callback_data=month_callback.new(
                                         month=f"{month_list[now + 3] if now + 3 <= 12 else month_list[now - 9]}"))
            ],
            [
                InlineKeyboardButton(text="–ù–∞–∑–∞–¥ ‚Ü©", callback_data="cancel")
            ]
        ]
    )
    await call.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü –∏ —á–∏—Å–ª–æ, –∫–æ–≥–¥–∞ –í—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –∫ –Ω–∞–º –ø—Ä–∏–µ—Ö–∞—Ç—å üóì",
                              reply_markup=keyb1)
    await Test.Q2.set()


@dp.callback_query_handler(state=Test.Q3)
async def end_zapis(call: CallbackQuery, state: FSMContext):
    await call.message.edit_reply_markup(reply_markup=None)
    await call.answer(cache_time=1)
    day = str(call.data)[6::]
    await state.update_data(answer_day=day)
    data = await state.get_data()
    month = data.get('answer_month')
    now_month = 0
    for i in month_list:
        if i == month:
            break
        now_month += 1
    keyb3 = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=f"{month_list[now_month] if now_month <= 12 else month_list[now_month - 12]}",
                                     callback_data=month_callback.new(
                                         month=f"{month_list[now_month] if now_month <= 12 else month_list[now_month - 12]}")),
                InlineKeyboardButton(text=f"{month_list[now_month + 1] if now_month + 1 <= 12 else month_list[now_month - 11]}",
                                     callback_data=month_callback.new(
                                         month=f"{month_list[now_month + 1] if now_month + 1 <= 12 else month_list[now_month - 11]}"))
            ],
            [
                InlineKeyboardButton(text="–ù–∞–∑–∞–¥ ‚Ü©", callback_data="cancel")
            ]
        ]
    )
    await call.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü –∏ —á–∏—Å–ª–æ, –∫–æ–≥–¥–∞ –í—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –≤—ã–µ–∑–¥ üìÖ",
                              reply_markup=keyb3)
    await Test.Q4.set()


@dp.callback_query_handler(state=Test.Q4, text_contains="cancel")
async def another_month(call: CallbackQuery):
    await call.message.edit_reply_markup(reply_markup=None)
    await call.answer(cache_time=1)
    now = int(str(date.today())[5:7]) - 1
    keyb1 = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=f"{month_list[now] if now <= 12 else month_list[now - 12]}",
                                     callback_data=month_callback.new(
                                         month=f"{month_list[now] if now <= 12 else month_list[now - 12]}")),
                InlineKeyboardButton(text=f"{month_list[now + 1] if now + 1 <= 12 else month_list[now - 11]}",
                                     callback_data=month_callback.new(
                                         month=f"{month_list[now + 1] if now + 1 <= 12 else month_list[now - 11]}"))
            ],
            [
                InlineKeyboardButton(text=f"{month_list[now + 2] if now + 2 <= 12 else month_list[now - 10]}",
                                     callback_data=month_callback.new(
                                         month=f"{month_list[now + 2] if now + 2 <= 12 else month_list[now - 10]}")),
                InlineKeyboardButton(text=f"{month_list[now + 3] if now + 3 <= 12 else month_list[now - 9]}",
                                     callback_data=month_callback.new(
                                         month=f"{month_list[now + 3] if now + 3 <= 12 else month_list[now - 9]}"))
            ],
            [
                InlineKeyboardButton(text="–ù–∞–∑–∞–¥ ‚Ü©", callback_data="cancel")
            ]
        ]
    )
    await call.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü –∏ —á–∏—Å–ª–æ, –∫–æ–≥–¥–∞ –í—ã –±—ã —Ö–æ—Ç–µ–ª–∏ –∫ –Ω–∞–º –ø—Ä–∏–µ—Ö–∞—Ç—å üóì",
                              reply_markup=keyb1)
    await Test.Q2.set()


@dp.callback_query_handler(state=Test.Q4)
async def day_out_zapis(call: CallbackQuery, state: FSMContext):
    await call.message.edit_reply_markup(reply_markup=None)
    await call.answer(cache_time=1)
    month = str(call.data)[6::]
    await state.update_data(answer_month_out=month)
    data = await state.get_data()
    day = int(data.get('answer_day'))
    month_input = data.get('answer_month')
    keyb4 = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=f"{'1' if month_input != month or day < 1 else ''}", callback_data=day_callback.new(date="1")),
                InlineKeyboardButton(text=f"{'2' if month_input != month or day < 2 else ''}", callback_data=day_callback.new(date="2")),
                InlineKeyboardButton(text=f"{'3' if month_input != month or day < 3 else ''}", callback_data=day_callback.new(date="3")),
                InlineKeyboardButton(text=f"{'4' if month_input != month or day < 4 else ''}", callback_data=day_callback.new(date="4")),
                InlineKeyboardButton(text=f"{'5' if month_input != month or day < 5 else ''}", callback_data=day_callback.new(date="5")),
                InlineKeyboardButton(text=f"{'6' if month_input != month or day < 6 else ''}", callback_data=day_callback.new(date="6")),
                InlineKeyboardButton(text=f"{'7' if month_input != month or day < 7 else ''}", callback_data=day_callback.new(date="7")),
            ],
            [
                InlineKeyboardButton(text=f"{'8' if month_input != month or day < 8 else ''}", callback_data=day_callback.new(date="8")),
                InlineKeyboardButton(text=f"{'9' if month_input != month or day < 9 else ''}", callback_data=day_callback.new(date="9")),
                InlineKeyboardButton(text=f"{'10' if month_input != month or day < 10 else ''}", callback_data=day_callback.new(date="10")),
                InlineKeyboardButton(text=f"{'11' if month_input != month or day < 11 else ''}", callback_data=day_callback.new(date="11")),
                InlineKeyboardButton(text=f"{'12' if month_input != month or day < 12 else ''}", callback_data=day_callback.new(date="12")),
                InlineKeyboardButton(text=f"{'13' if month_input != month or day < 13 else ''}", callback_data=day_callback.new(date="13")),
                InlineKeyboardButton(text=f"{'14' if month_input != month or day < 14 else ''}", callback_data=day_callback.new(date="14")),
            ],
            [
                InlineKeyboardButton(text=f"{'15' if month_input != month or day < 15 else ''}", callback_data=day_callback.new(date="15")),
                InlineKeyboardButton(text=f"{'16' if month_input != month or day < 16 else ''}", callback_data=day_callback.new(date="16")),
                InlineKeyboardButton(text=f"{'17' if month_input != month or day < 17 else ''}", callback_data=day_callback.new(date="17")),
                InlineKeyboardButton(text=f"{'18' if month_input != month or day < 18 else ''}", callback_data=day_callback.new(date="18")),
                InlineKeyboardButton(text=f"{'19' if month_input != month or day < 19 else ''}", callback_data=day_callback.new(date="19")),
                InlineKeyboardButton(text=f"{'20' if month_input != month or day < 20 else ''}", callback_data=day_callback.new(date="20")),
                InlineKeyboardButton(text=f"{'21' if month_input != month or day < 21 else ''}", callback_data=day_callback.new(date="21")),
            ],
            [
                InlineKeyboardButton(text=f"{'22' if month_input != month or day < 22 else ''}", callback_data=day_callback.new(date="22")),
                InlineKeyboardButton(text=f"{'23' if month_input != month or day < 23 else ''}", callback_data=day_callback.new(date="23")),
                InlineKeyboardButton(text=f"{'24' if month_input != month or day < 24 else ''}", callback_data=day_callback.new(date="24")),
                InlineKeyboardButton(text=f"{'25' if month_input != month or day < 25 else ''}", callback_data=day_callback.new(date="25")),
                InlineKeyboardButton(text=f"{'26' if month_input != month or day < 26 else ''}", callback_data=day_callback.new(date="26")),
                InlineKeyboardButton(text=f"{'27' if month_input != month or day < 27 else ''}", callback_data=day_callback.new(date="27")),
                InlineKeyboardButton(text=f"{'28' if month_input != month or day < 28 else ''}", callback_data=day_callback.new(date="28")),
            ],
            [
                InlineKeyboardButton(text=f"{'29' if month_day[month] >= 29 and (month_input != month or day < 29) else ''}",
                                     callback_data=day_callback.new(date=f"{'29' if month_day[month] >= 29 else ''}")),
                InlineKeyboardButton(text=f"{'30' if month_day[month] >= 30 and (month_input != month or day < 30) else ''}",
                                     callback_data=day_callback.new(date=f"{'30' if month_day[month] >= 30 else ''}")),
                InlineKeyboardButton(text=f"{'31' if month_day[month] >= 31 and (month_input != month or day < 31) else ''}",
                                     callback_data=day_callback.new(date=f"{'31' if month_day[month] >= 31 else ''}"))
            ],
            [
                InlineKeyboardButton(text="–ù–∞–∑–∞–¥ ‚Ü©", callback_data="cancel")
            ]
        ]
    )
    await call.message.answer("–ê —Ç–µ–ø–µ—Ä—å –¥–µ–Ω—å üóì", reply_markup=keyb4)
    await Test.Q5.set()


@dp.callback_query_handler(state=Test.Q5, text_contains="cancel")
async def end_zapis(call: CallbackQuery, state: FSMContext):
    await call.message.edit_reply_markup(reply_markup=None)
    await call.answer(cache_time=1)
    day = str(call.data)[6::]
    await state.update_data(answer_day=day)
    data = await state.get_data()
    month = data.get('answer_month')
    now_month = 0
    for i in month_list:
        if i == month:
            break
        now_month += 1
    keyb3 = InlineKeyboardMarkup(
        inline_keyboard=[
            [
                InlineKeyboardButton(text=f"{month_list[now_month] if now_month <= 12 else month_list[now_month - 12]}",
                                     callback_data=month_callback.new(
                                         month=f"{month_list[now_month] if now_month <= 12 else month_list[now_month - 12]}")),
                InlineKeyboardButton(text=f"{month_list[now_month + 1] if now_month + 1 <= 12 else month_list[now_month - 11]}",
                                     callback_data=month_callback.new(
                                         month=f"{month_list[now_month + 1] if now_month + 1 <= 12 else month_list[now_month - 11]}"))
            ],
            [
                InlineKeyboardButton(text="–ù–∞–∑–∞–¥ ‚Ü©", callback_data="cancel")
            ]
        ]
    )
    await call.message.answer("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Å—è—Ü –∏ —á–∏—Å–ª–æ, –∫–æ–≥–¥–∞ –í—ã –ø–ª–∞–Ω–∏—Ä—É–µ—Ç–µ –≤—ã–µ–∑–¥ üìÖ",
                              reply_markup=keyb3)
    await Test.Q4.set()


@dp.callback_query_handler(state=Test.Q5)
async def zapis_made(call: CallbackQuery, state: FSMContext):
    await call.message.edit_reply_markup(reply_markup=None)
    await call.answer(cache_time=1)
    day_out = str(call.data)[6::]
    await state.update_data(answer_day_out=day_out)
    data = await state.get_data()
    month = data.get('answer_month')
    day = data.get('answer_day')
    month_out = data.get('answer_month_out')
    await call.message.answer("–ê—Ä–µ–Ω–¥–∞ –¥–æ–º–∏–∫–∞ –ø—Ä–æ–¥–ª–∏—Ç—Å—è: \n"
                              f"–° {month}, {day} —á–∏—Å–ª–æ ‚úÖ\n"
                              f"–ü–æ {month_out}, {day_out} —á–∏—Å–ª–æ ‚úÖ\n"
                              f"–î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è –∏ —Å–æ–∑–¥–∞–Ω–∏—è –∑–∞–ø–∏—Å–∏ —Å–∫–∞–∂–∏—Ç–µ –∫–∞–∫ –∫ –í–∞–º –º–æ–∂–Ω–æ –±—É–¥–µ—Ç –æ–±—Ä–∞—â–∞—Ç—å—Å—è üòÄ\n"
                              f"–ò –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –Ω–∞–º —Å–≤–æ–π –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ ‚òé \n"
                              f"–î–ª—è –æ—Ç–º–µ–Ω—ã –∑–∞–ø–∏—Å–∏ –≤–≤–µ–¥–∏—Ç–µ –∫–æ–º–∞–Ω–¥—É /cancel",
                              reply_markup=types.ReplyKeyboardRemove())
    await Test.Q6.set()


@dp.message_handler(state=Test.Q6)
async def create_zapis(message: types.message, state: FSMContext):
    await message.answer("–°–ø–∞—Å–∏–±–æ, –∑–∞–ø–∏—Å—å —Å–æ–∑–¥–∞–Ω–∞!\n"
                         "–í –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è —Å –í–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è –Ω–∞—à —Å–æ—Ç—Ä—É–¥–Ω–∏–∫ ‚ò∫")
    phone_number = message.text
    await state.update_data(phone_number=phone_number)
    data = await state.get_data()
    answer1 = data.get('answer_month')
    answer2 = data.get('answer_day')
    answer3 = data.get('answer_month_out')
    answer4 = data.get('answer_day_out')
    await state.finish()
    for i in ADMINS:
        await bot.send_message(chat_id=i,
                               text=f'–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å c {answer1}, {answer2} —á–∏—Å–ª–æ, –ø–æ {answer3}, {answer4} —á–∏—Å–ª–æ\n'
                                    f'–ò–º—è –∏ –Ω–æ–º–µ—Ä —Ç–µ–ª–µ—Ñ–æ–Ω–∞ –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—è: {phone_number}')


@dp.callback_query_handler(text="about")
async def tell_about(call: CallbackQuery):
    await call.answer()


@dp.callback_query_handler(text="helpme")
async def tell_about(call: CallbackQuery):
    await call.message.edit_reply_markup(reply_markup=None)
    await call.message.answer("–ú—ã –≥–æ—Ç–æ–≤—ã –ø—Ä–æ–∫–æ–Ω—Å—É–ª—å—Ç–∏—Ä–æ–≤–∞—Ç—å –í–∞—Å!\n"
                              "–ó–∞–¥–∞–π—Ç–µ —Å–≤–æ–π –≤–æ–ø—Ä–æ—Å –Ω–∏–∂–µ üí¨")
    await Test.Q1.set()


@dp.message_handler(state=Test.Q1)
async def helpme1(message: types.Message, state: FSMContext):
    await bot.send_message('961406924', text=message.text)
    await bot.send_message('961406924', text=f"–°–ø—Ä–∞—à–∏–≤–∞–µ—Ç –ø–æ—Å–µ—Ç–∏—Ç–µ–ª—å: @{message.from_user.username}\n"
                                             f"–ü–æ–ø—Ä–æ—à—É –æ—Ç–≤–µ—Ç–∏—Ç—å –µ–º—É –≤ –ª–∏—á–∫—É.")
    await message.answer("–ú—ã –æ—Ç–≤–µ—Ç–∏–º –í–∞–º –≤ –ª–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –±–ª–∏–∂–∞–π—à–µ–µ –≤—Ä–µ–º—è.")
    await state.finish()
    await message.answer("–í–æ–∑–≤—Ä–∞—â–∞—é –í–∞—Å –≤ –æ—Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é",
                         reply_markup=keyb0)
